---
- name: update apt cache
  apt:
    update_cache: yes
  become: yes

# I don't see why this is important; why can't we
# just install the latest version

- name: set postgresql version on trusty
  set_fact:
      postgresql_version: "9.3"
  when: ansible_distribution_release == "trusty"

- name: set postgresql version on xenial
  set_fact:
      postgresql_version: "9.5"
  when: ansible_distribution_release == "xenial"

- name: set postgresql version on bionic
  set_fact:
      postgresql_version: "10"
      python_version: "3"
  when: ansible_distribution_release == "bionic"

- name: set postgresql version on focal
  set_fact:
      postgresql_version: "12"
      python_version: "3"
  when: ansible_distribution_release == "focal"

- name: set postgresql version on jammy
  set_fact:
      postgresql_version: "14"
      python_version: "3"
  when: ansible_distribution_release == "jammy"

- name: install postgresql requirements
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items: 
    - postgresql
    - postgresql-common
    - postgresql-contrib
    - "postgresql-server-dev-{{ postgresql_version }}"
    - "python{{ python_version|default('') }}-psycopg2"
  tags:
    - packages

- name: ensure database service is up
  service:
    name: postgresql
    state: started
    enabled: yes
  become: yes

- name: allow users to connect locally
  become: yes
  lineinfile:
     dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
     # allow all ipv4 local connections without a password
     line: 'host    all             all             0.0.0.0/0            trust'
  register: pg_hba_conf

# This is the only task that actually cares about the python interpreter so we set it here
- set_fact:
    ansible_python_interpreter: "/usr/bin/python3"
  when:
    - python_version is defined
    - python_version == "3"

- name: make jenkins-build user
  postgresql_user:
    name: "jenkins-build"
    password: "secret"
    role_attr_flags: SUPERUSER
    login_user: postgres
  become_user: postgres
  become: yes

- service:
    name: postgresql
    state: restarted
  become: true
